//------------------------------------------------------------------------------
// <auto-generated>
//    這個程式碼是由範本產生。
//
//    對這個檔案進行手動變更可能導致您的應用程式產生未預期的行為。
//    如果重新產生程式碼，將會覆寫對這個檔案的手動變更。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace LogReportingDashboard.Models.Entities
{
    #region 內容
    
    /// <summary>
    /// 沒有可用的中繼資料文件。
    /// </summary>
    public partial class MvcLoggingDemoContainer : ObjectContext
    {
        #region 建構函式
    
        /// <summary>
        /// 使用在應用程式組態檔的 'MvcLoggingDemoContainer' 區段中找到的連接字串，初始化新的 MvcLoggingDemoContainer 物件。
        /// </summary>
        public MvcLoggingDemoContainer() : base("name=MvcLoggingDemoContainer", "MvcLoggingDemoContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 MvcLoggingDemoContainer 物件。
        /// </summary>
        public MvcLoggingDemoContainer(string connectionString) : base(connectionString, "MvcLoggingDemoContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 MvcLoggingDemoContainer 物件。
        /// </summary>
        public MvcLoggingDemoContainer(EntityConnection connection) : base(connection, "MvcLoggingDemoContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 部分方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        public ObjectSet<ELMAH_Error> ELMAH_Error
        {
            get
            {
                if ((_ELMAH_Error == null))
                {
                    _ELMAH_Error = base.CreateObjectSet<ELMAH_Error>("ELMAH_Error");
                }
                return _ELMAH_Error;
            }
        }
        private ObjectSet<ELMAH_Error> _ELMAH_Error;
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        public ObjectSet<NLog_Record> NLog_Record
        {
            get
            {
                if ((_NLog_Record == null))
                {
                    _NLog_Record = base.CreateObjectSet<NLog_Record>("NLog_Record");
                }
                return _NLog_Record;
            }
        }
        private ObjectSet<NLog_Record> _NLog_Record;

        #endregion
        #region AddTo 方法
    
        /// <summary>
        /// 將新物件加入 ELMAH_Error EntitySet 的方法已被取代。請考慮改為使用關聯的 ObjectSet&lt;T&gt; 屬性的 .Add 方法。
        /// </summary>
        public void AddToELMAH_Error(ELMAH_Error eLMAH_Error)
        {
            base.AddObject("ELMAH_Error", eLMAH_Error);
        }
    
        /// <summary>
        /// 將新物件加入 NLog_Record EntitySet 的方法已被取代。請考慮改為使用關聯的 ObjectSet&lt;T&gt; 屬性的 .Add 方法。
        /// </summary>
        public void AddToNLog_Record(NLog_Record nLog_Record)
        {
            base.AddObject("NLog_Record", nLog_Record);
        }

        #endregion
    }
    

    #endregion
    
    #region 實體
    
    /// <summary>
    /// 沒有可用的中繼資料文件。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ErrorLogModel", Name="ELMAH_Error")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ELMAH_Error : EntityObject
    {
        #region Factory 方法
    
        /// <summary>
        /// 建立新 ELMAH_Error 物件。
        /// </summary>
        /// <param name="errorId">ErrorId 屬性的初始值。</param>
        /// <param name="application">Application 屬性的初始值。</param>
        /// <param name="host">Host 屬性的初始值。</param>
        /// <param name="type">Type 屬性的初始值。</param>
        /// <param name="source">Source 屬性的初始值。</param>
        /// <param name="message">Message 屬性的初始值。</param>
        /// <param name="user">User 屬性的初始值。</param>
        /// <param name="statusCode">StatusCode 屬性的初始值。</param>
        /// <param name="timeUtc">TimeUtc 屬性的初始值。</param>
        /// <param name="sequence">Sequence 屬性的初始值。</param>
        /// <param name="allXml">AllXml 屬性的初始值。</param>
        public static ELMAH_Error CreateELMAH_Error(global::System.Guid errorId, global::System.String application, global::System.String host, global::System.String type, global::System.String source, global::System.String message, global::System.String user, global::System.Int32 statusCode, global::System.DateTime timeUtc, global::System.Int32 sequence, global::System.String allXml)
        {
            ELMAH_Error eLMAH_Error = new ELMAH_Error();
            eLMAH_Error.ErrorId = errorId;
            eLMAH_Error.Application = application;
            eLMAH_Error.Host = host;
            eLMAH_Error.Type = type;
            eLMAH_Error.Source = source;
            eLMAH_Error.Message = message;
            eLMAH_Error.User = user;
            eLMAH_Error.StatusCode = statusCode;
            eLMAH_Error.TimeUtc = timeUtc;
            eLMAH_Error.Sequence = sequence;
            eLMAH_Error.AllXml = allXml;
            return eLMAH_Error;
        }

        #endregion
        #region 基本屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ErrorId
        {
            get
            {
                return _ErrorId;
            }
            set
            {
                if (_ErrorId != value)
                {
                    OnErrorIdChanging(value);
                    ReportPropertyChanging("ErrorId");
                    _ErrorId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ErrorId");
                    OnErrorIdChanged();
                }
            }
        }
        private global::System.Guid _ErrorId;
        partial void OnErrorIdChanging(global::System.Guid value);
        partial void OnErrorIdChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Application
        {
            get
            {
                return _Application;
            }
            set
            {
                OnApplicationChanging(value);
                ReportPropertyChanging("Application");
                _Application = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Application");
                OnApplicationChanged();
            }
        }
        private global::System.String _Application;
        partial void OnApplicationChanging(global::System.String value);
        partial void OnApplicationChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Host
        {
            get
            {
                return _Host;
            }
            set
            {
                OnHostChanging(value);
                ReportPropertyChanging("Host");
                _Host = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Host");
                OnHostChanged();
            }
        }
        private global::System.String _Host;
        partial void OnHostChanging(global::System.String value);
        partial void OnHostChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Source
        {
            get
            {
                return _Source;
            }
            set
            {
                OnSourceChanging(value);
                ReportPropertyChanging("Source");
                _Source = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Source");
                OnSourceChanged();
            }
        }
        private global::System.String _Source;
        partial void OnSourceChanging(global::System.String value);
        partial void OnSourceChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String User
        {
            get
            {
                return _User;
            }
            set
            {
                OnUserChanging(value);
                ReportPropertyChanging("User");
                _User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("User");
                OnUserChanged();
            }
        }
        private global::System.String _User;
        partial void OnUserChanging(global::System.String value);
        partial void OnUserChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusCode
        {
            get
            {
                return _StatusCode;
            }
            set
            {
                OnStatusCodeChanging(value);
                ReportPropertyChanging("StatusCode");
                _StatusCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusCode");
                OnStatusCodeChanged();
            }
        }
        private global::System.Int32 _StatusCode;
        partial void OnStatusCodeChanging(global::System.Int32 value);
        partial void OnStatusCodeChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TimeUtc
        {
            get
            {
                return _TimeUtc;
            }
            set
            {
                OnTimeUtcChanging(value);
                ReportPropertyChanging("TimeUtc");
                _TimeUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeUtc");
                OnTimeUtcChanged();
            }
        }
        private global::System.DateTime _TimeUtc;
        partial void OnTimeUtcChanging(global::System.DateTime value);
        partial void OnTimeUtcChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Sequence
        {
            get
            {
                return _Sequence;
            }
            set
            {
                OnSequenceChanging(value);
                ReportPropertyChanging("Sequence");
                _Sequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sequence");
                OnSequenceChanged();
            }
        }
        private global::System.Int32 _Sequence;
        partial void OnSequenceChanging(global::System.Int32 value);
        partial void OnSequenceChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AllXml
        {
            get
            {
                return _AllXml;
            }
            set
            {
                OnAllXmlChanging(value);
                ReportPropertyChanging("AllXml");
                _AllXml = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AllXml");
                OnAllXmlChanged();
            }
        }
        private global::System.String _AllXml;
        partial void OnAllXmlChanging(global::System.String value);
        partial void OnAllXmlChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 沒有可用的中繼資料文件。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ErrorLogModel", Name="NLog_Record")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NLog_Record : EntityObject
    {
        #region Factory 方法
    
        /// <summary>
        /// 建立新 NLog_Record 物件。
        /// </summary>
        /// <param name="sequence_id">sequence_id 屬性的初始值。</param>
        /// <param name="time_stamp">time_stamp 屬性的初始值。</param>
        /// <param name="level">level 屬性的初始值。</param>
        /// <param name="host">host 屬性的初始值。</param>
        /// <param name="url">url 屬性的初始值。</param>
        /// <param name="type">type 屬性的初始值。</param>
        /// <param name="source">source 屬性的初始值。</param>
        /// <param name="logger">logger 屬性的初始值。</param>
        /// <param name="message">message 屬性的初始值。</param>
        /// <param name="stacktrace">stacktrace 屬性的初始值。</param>
        /// <param name="detail">detail 屬性的初始值。</param>
        /// <param name="allxml">allxml 屬性的初始值。</param>
        public static NLog_Record CreateNLog_Record(global::System.Int32 sequence_id, global::System.DateTime time_stamp, global::System.String level, global::System.String host, global::System.String url, global::System.String type, global::System.String source, global::System.String logger, global::System.String message, global::System.String stacktrace, global::System.String detail, global::System.String allxml)
        {
            NLog_Record nLog_Record = new NLog_Record();
            nLog_Record.sequence_id = sequence_id;
            nLog_Record.time_stamp = time_stamp;
            nLog_Record.level = level;
            nLog_Record.host = host;
            nLog_Record.url = url;
            nLog_Record.type = type;
            nLog_Record.source = source;
            nLog_Record.logger = logger;
            nLog_Record.message = message;
            nLog_Record.stacktrace = stacktrace;
            nLog_Record.detail = detail;
            nLog_Record.allxml = allxml;
            return nLog_Record;
        }

        #endregion
        #region 基本屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 sequence_id
        {
            get
            {
                return _sequence_id;
            }
            set
            {
                if (_sequence_id != value)
                {
                    Onsequence_idChanging(value);
                    ReportPropertyChanging("sequence_id");
                    _sequence_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("sequence_id");
                    Onsequence_idChanged();
                }
            }
        }
        private global::System.Int32 _sequence_id;
        partial void Onsequence_idChanging(global::System.Int32 value);
        partial void Onsequence_idChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime time_stamp
        {
            get
            {
                return _time_stamp;
            }
            set
            {
                if (_time_stamp != value)
                {
                    Ontime_stampChanging(value);
                    ReportPropertyChanging("time_stamp");
                    _time_stamp = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("time_stamp");
                    Ontime_stampChanged();
                }
            }
        }
        private global::System.DateTime _time_stamp;
        partial void Ontime_stampChanging(global::System.DateTime value);
        partial void Ontime_stampChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String level
        {
            get
            {
                return _level;
            }
            set
            {
                if (_level != value)
                {
                    OnlevelChanging(value);
                    ReportPropertyChanging("level");
                    _level = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("level");
                    OnlevelChanged();
                }
            }
        }
        private global::System.String _level;
        partial void OnlevelChanging(global::System.String value);
        partial void OnlevelChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String host
        {
            get
            {
                return _host;
            }
            set
            {
                if (_host != value)
                {
                    OnhostChanging(value);
                    ReportPropertyChanging("host");
                    _host = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("host");
                    OnhostChanged();
                }
            }
        }
        private global::System.String _host;
        partial void OnhostChanging(global::System.String value);
        partial void OnhostChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String url
        {
            get
            {
                return _url;
            }
            set
            {
                if (_url != value)
                {
                    OnurlChanging(value);
                    ReportPropertyChanging("url");
                    _url = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("url");
                    OnurlChanged();
                }
            }
        }
        private global::System.String _url;
        partial void OnurlChanging(global::System.String value);
        partial void OnurlChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String type
        {
            get
            {
                return _type;
            }
            set
            {
                if (_type != value)
                {
                    OntypeChanging(value);
                    ReportPropertyChanging("type");
                    _type = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("type");
                    OntypeChanged();
                }
            }
        }
        private global::System.String _type;
        partial void OntypeChanging(global::System.String value);
        partial void OntypeChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String source
        {
            get
            {
                return _source;
            }
            set
            {
                if (_source != value)
                {
                    OnsourceChanging(value);
                    ReportPropertyChanging("source");
                    _source = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("source");
                    OnsourceChanged();
                }
            }
        }
        private global::System.String _source;
        partial void OnsourceChanging(global::System.String value);
        partial void OnsourceChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String logger
        {
            get
            {
                return _logger;
            }
            set
            {
                if (_logger != value)
                {
                    OnloggerChanging(value);
                    ReportPropertyChanging("logger");
                    _logger = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("logger");
                    OnloggerChanged();
                }
            }
        }
        private global::System.String _logger;
        partial void OnloggerChanging(global::System.String value);
        partial void OnloggerChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String message
        {
            get
            {
                return _message;
            }
            set
            {
                if (_message != value)
                {
                    OnmessageChanging(value);
                    ReportPropertyChanging("message");
                    _message = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("message");
                    OnmessageChanged();
                }
            }
        }
        private global::System.String _message;
        partial void OnmessageChanging(global::System.String value);
        partial void OnmessageChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String stacktrace
        {
            get
            {
                return _stacktrace;
            }
            set
            {
                if (_stacktrace != value)
                {
                    OnstacktraceChanging(value);
                    ReportPropertyChanging("stacktrace");
                    _stacktrace = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("stacktrace");
                    OnstacktraceChanged();
                }
            }
        }
        private global::System.String _stacktrace;
        partial void OnstacktraceChanging(global::System.String value);
        partial void OnstacktraceChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String detail
        {
            get
            {
                return _detail;
            }
            set
            {
                if (_detail != value)
                {
                    OndetailChanging(value);
                    ReportPropertyChanging("detail");
                    _detail = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("detail");
                    OndetailChanged();
                }
            }
        }
        private global::System.String _detail;
        partial void OndetailChanging(global::System.String value);
        partial void OndetailChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String allxml
        {
            get
            {
                return _allxml;
            }
            set
            {
                if (_allxml != value)
                {
                    OnallxmlChanging(value);
                    ReportPropertyChanging("allxml");
                    _allxml = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("allxml");
                    OnallxmlChanged();
                }
            }
        }
        private global::System.String _allxml;
        partial void OnallxmlChanging(global::System.String value);
        partial void OnallxmlChanged();

        #endregion
    
    }

    #endregion
    
}
